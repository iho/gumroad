// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"fmt"
	"io"
	"strconv"
)

type BuyProduct struct {
	ProductID int32 `json:"productId"`
}

type ExtendedUser struct {
	ID       int32  `json:"id"`
	Username string `json:"username"`
	Name     string `json:"name"`
	Bio      string `json:"bio"`
	Balance  int32  `json:"balance"`
	Email    string `json:"email"`
}

type NewProduct struct {
	Name         string `json:"name"`
	Price        int32  `json:"price"`
	Description  string `json:"description"`
	Summary      string `json:"summary"`
	CallToAction string `json:"callToAction"`
	CoverImage   string `json:"coverImage"`
	Slug         string `json:"slug"`
	IsPablished  bool   `json:"isPablished"`
	Receipt      string `json:"receipt"`
	Content      string `json:"content"`
}

type PayResponse struct {
	URL string `json:"url"`
}

type PublishProduct struct {
	ProductID int32  `json:"productId"`
	Slug      string `json:"slug"`
}

type UserStatus string

const (
	UserStatusNew          UserStatus = "NEW"
	UserStatusNeedsConfirm UserStatus = "NEEDS_CONFIRM"
	UserStatusPwReset      UserStatus = "PW_RESET"
	UserStatusPhoneReset   UserStatus = "PHONE_RESET"
	UserStatusSignedin     UserStatus = "SIGNEDIN"
	UserStatusBanned       UserStatus = "BANNED"
)

var AllUserStatus = []UserStatus{
	UserStatusNew,
	UserStatusNeedsConfirm,
	UserStatusPwReset,
	UserStatusPhoneReset,
	UserStatusSignedin,
	UserStatusBanned,
}

func (e UserStatus) IsValid() bool {
	switch e {
	case UserStatusNew, UserStatusNeedsConfirm, UserStatusPwReset, UserStatusPhoneReset, UserStatusSignedin, UserStatusBanned:
		return true
	}
	return false
}

func (e UserStatus) String() string {
	return string(e)
}

func (e *UserStatus) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = UserStatus(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid UserStatus", str)
	}
	return nil
}

func (e UserStatus) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}
